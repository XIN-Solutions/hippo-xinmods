{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "hippo-backend-swagger",
        "description": "<h1>XINmods: An Open Source Headless CMS Content as a Service Solution for Bloomreach XM</h1>\n<p>The <em>XIN mods</em> are a set of tools that turn a vanilla Blooomreach XM install into an easy-to-deploy <strong>Fully Headless Content as a Service</strong> instance that you can use to quickly model and query information in your repository with!</p>\n<p>It includes the following:</p>\n<ul>\n    <li>A more compact authoring experience.</li>\n    <li>More dynamic asset management with focus point selection.</li>\n    <li>Package management - move your content between servers.</li>\n    <li>Multi-tenanted Document REST API to query and retrieve the documents you need.</li>\n    <li>XIN Mods Collections that allows you to store and retrieve simple flat documents.</li>\n    <li>Admin panels and custom iframe panels for integrations with other systems you use.</li>\n    <li>Finally integrating the CMS events with your other microservices.</li>\n    <li>An easy to use NodeJS package to integrate your systems with Bloomreach XM easily.</li>\n    <li>All the great things you know from Bloomreach XM.</li>\n</ul>\n\n<p>\n    Find more information here:\n</p>\n<ul>\n    <li><a href=\"https://github.com/XIN-Solutions/hippo-xinmods\">Bloomreach with XIN mods Source</a></li>\n    <li><a href=\"https://xinsolutions.co.nz/bloomreach-headless-cms-caas\">Documentation</a></li>\n    <li><a href=\"https://marnixkok.nl/tutorials\">XIN Mods Video tutorials</a></li>\n</ul>\n",
        "common": [
            "Models.js"
        ]
    },
    "host": "localhost:8080",
    "schemes": [
        "http",
        "https"
    ],
    "basePath": "/",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api/xin/content/document-with-uuid": {
            "get": {
                "summary": "Get document with UUID",
                "tags": [
                    "Content"
                ],
                "id": "get_apixincontentdocumentwithuuid",
                "description": "Get document with UUID",
                "operationId": "get_apixincontentdocumentwithuuid",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "description": "Basic authorization header for user in the `restapi` group or `admin` user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "uuid",
                        "in": "query",
                        "required": false,
                        "description": "the unique identifier of the document you wish to retrieve.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fetch",
                        "in": "query",
                        "required": false,
                        "description": "partial paths to items in the payload that must be <a href=\"https://marnixkok.nl/news/bloomreach-xm-tutorials/prefetching-content-from-bloomreach-xm-using-xin-mods\" target=\"_blank\">prefetched</a>.",
                        "schema": {
                            "$ref": "#/definitions/[ 'Array' ].<string>"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the document with a particular UUID",
                        "schema": {
                            "$ref": "#/definitions/DocumentWithUuidResponse"
                        }
                    },
                    "403": {
                        "description": "Sent when the credentials are invalid.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/xin/content/document-at-path": {
            "get": {
                "summary": "Get document at path",
                "tags": [
                    "Content"
                ],
                "id": "get_apixincontentdocumentatpath",
                "description": "Get document at path",
                "operationId": "get_apixincontentdocumentatpath",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "description": "Basic authorization header for user in the `restapi` group or `admin` user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "required": false,
                        "description": "the path of the document you wish to retrieve.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fetch",
                        "in": "query",
                        "required": false,
                        "description": "partial paths to items in the payload that must be <a href=\"https://marnixkok.nl/news/bloomreach-xm-tutorials/prefetching-content-from-bloomreach-xm-using-xin-mods\" target=\"_blank\">prefetched</a>.",
                        "schema": {
                            "$ref": "#/definitions/[ 'Array' ].<string>"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the document with a particular UUID",
                        "schema": {
                            "$ref": "#/definitions/DocumentWithUuidResponse"
                        }
                    },
                    "403": {
                        "description": "Sent when the credentials are invalid.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/xin/content/uuid-to-path": {
            "get": {
                "summary": "UUID to path converter",
                "tags": [
                    "Content"
                ],
                "id": "get_apixincontentuuidtopath",
                "description": "This endpoint is able to convert a UUID to the Path at which the document with that UUID lives in the JCR. It will also return other useful metadata.",
                "operationId": "get_apixincontentuuidtopath",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "description": "Basic authorization header for user in the `restapi` group or `admin` user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "uuid",
                        "in": "query",
                        "required": false,
                        "description": "the UUID to convert to its path equivalent",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the list of documents and folders",
                        "schema": {
                            "$ref": "#/definitions/UuidToPathResponse"
                        }
                    },
                    "403": {
                        "description": "Sent when the credentials are invalid.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/xin/content/path-to-uuid": {
            "get": {
                "summary": "Path To UUID Converter",
                "tags": [
                    "Content"
                ],
                "id": "get_apixincontentpathtouuid",
                "description": "This endpoint is able to convert a document path to the UUID of the document. It will also return other useful metadata.",
                "operationId": "get_apixincontentpathtouuid",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "description": "Basic authorization header for user in the `restapi` group or `admin` user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "required": false,
                        "description": "the path of the document to retrieve a UUID for.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the list of documents and folders",
                        "schema": {
                            "$ref": "#/definitions/PathToUuidResponse"
                        }
                    },
                    "403": {
                        "description": "Sent when the credentials are invalid.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/xin/content/documents-list": {
            "get": {
                "summary": "List folders and documents",
                "tags": [
                    "Content"
                ],
                "id": "get_apixincontentdocumentslist",
                "description": "This endpoint enables you to retrieve a list of sub-folders and sub-documents of a specific path in your content tree.",
                "operationId": "get_apixincontentdocumentslist",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "description": "Basic authorization header for user in the `restapi` group or `admin` user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "required": false,
                        "description": "the path to retrieve child document information for",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fetch",
                        "in": "query",
                        "required": false,
                        "description": "partial paths to items in the payload that must be <a href=\"https://marnixkok.nl/news/bloomreach-xm-tutorials/prefetching-content-from-bloomreach-xm-using-xin-mods\" target=\"_blank\">prefetched</a>.",
                        "schema": {
                            "$ref": "#/definitions/[ 'Array' ].<string>"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the list of documents and folders",
                        "schema": {
                            "$ref": "#/definitions/ListDocumentsResponse"
                        }
                    },
                    "403": {
                        "description": "Sent when the credentials are invalid.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/documents/{uuid}": {
            "get": {
                "summary": "Get document by ID (legacy)",
                "tags": [
                    "Content"
                ],
                "id": "get_apidocumentsuuid",
                "description": "Get document is an endpoint built-in to Bloomreach XM, it allows you to query for a single document by its UUID. While you're free to use this endpoint, it is recommended to use the XIN Mods `Get document at path` endpoint as it allows prefetching.",
                "operationId": "get_apidocumentsuuid",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "description": "Basic authorization header for user in the `restapi` group or `admin` user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": false,
                        "description": "the UUID of the document you want to retrieve.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of documents",
                        "schema": {
                            "$ref": "#/definitions/BloomreachDocument"
                        }
                    },
                    "403": {
                        "description": "Sent when the credentials are invalid.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/documents": {
            "get": {
                "summary": "Get filtered documents",
                "tags": [
                    "Content"
                ],
                "id": "get_apidocuments",
                "description": "Get documents is an endpoint built-in to Bloomreach XM, it allows you to query for documents in quite the unrefined manner.",
                "operationId": "get_apidocuments",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "description": "Basic authorization header for user in the `restapi` group or `admin` user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_offset",
                        "in": "query",
                        "required": false,
                        "description": "pagination offset",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "_max",
                        "in": "query",
                        "required": false,
                        "description": "the maximum number of records to be retrieved",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "_orderBy",
                        "in": "query",
                        "required": false,
                        "description": "the field to order by (eg, hippostd:pubwfCreationDate)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_sortOrder",
                        "in": "query",
                        "required": false,
                        "description": "'asc' or 'desc' for ascending and descending sort order respectively",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_nodetype",
                        "in": "query",
                        "required": false,
                        "description": "the CND type to look for (like xinmods:blogdocument)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_query",
                        "in": "query",
                        "required": false,
                        "description": "the free text query.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of documents",
                        "schema": {
                            "$ref": "#/definitions/GetDocumentsResponse"
                        }
                    },
                    "403": {
                        "description": "Sent when the credentials are invalid.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/xin/facets/get": {
            "get": {
                "summary": "Get Facet at path",
                "tags": [
                    "Complex Content"
                ],
                "id": "get_apixinfacetsget",
                "description": "Get facet at path",
                "operationId": "get_apixinfacetsget",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The Facet information",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/xin/query": {
            "get": {
                "summary": "Execute a query that returns a set of documents.",
                "tags": [
                    "Complex Content"
                ],
                "id": "get_apixinquery",
                "description": "<p>Execute a query that returns a set of documents.</p> <p>Can we do multiple lines?</p>",
                "operationId": "get_apixinquery",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The Collections API List response.",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/xin/collections/list": {
            "get": {
                "summary": "List collections",
                "tags": [
                    "Collections"
                ],
                "id": "get_apixincollectionslist",
                "description": "List collections of simple documents currently available in your Bloomreach XM repository.",
                "operationId": "get_apixincollectionslist",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The Collections API List response.",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/xin/collections/{name}/item": {
            "get": {
                "summary": "Get collection",
                "tags": [
                    "Collections"
                ],
                "id": "get_apixincollectionsnameitem",
                "description": "Get collection item",
                "operationId": "get_apixincollectionsnameitem",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The Collections API List response.",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "summary": "Delete collection",
                "tags": [
                    "Collections"
                ],
                "id": "delete_apixincollectionsnameitem",
                "description": "Delete collection item",
                "operationId": "delete_apixincollectionsnameitem",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The Collections API delete response.",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "summary": "Put collection",
                "tags": [
                    "Collections"
                ],
                "id": "post_apixincollectionsnameitem",
                "description": "Put collection item",
                "operationId": "post_apixincollectionsnameitem",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The Collections API put response.",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/assetmod/{url}": {
            "get": {
                "summary": "Asset modification",
                "tags": [
                    "Asset Modification"
                ],
                "id": "get_assetmodurl",
                "description": "Asset mods",
                "operationId": "get_assetmodurl",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "binary",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "BloomreachDocument": {
            "type": "object",
            "title": "BloomreachDocument",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "the UUID of the document"
                },
                "name": {
                    "type": "string",
                    "description": "the node name of the document"
                },
                "displayName": {
                    "type": "string",
                    "description": "the human-readable label of the document"
                },
                "path": {
                    "type": "string",
                    "description": "the resolved path at which the document lives in the JCR"
                },
                "type": {
                    "type": "string",
                    "description": "the CND type of the document that has been retrieved"
                },
                "locale": {
                    "type": "string",
                    "description": "the document locale"
                },
                "pubState": {
                    "type": "string",
                    "description": "'published' (unpublished documents are not exposed in the API)"
                },
                "pubwfCreationDate": {
                    "type": "string",
                    "description": "publication workflow creation ISO date string indicating when the document was created."
                },
                "pubwfLastModificationDate": {
                    "type": "string",
                    "description": "publication workflow modification date formatted as an ISO date string."
                },
                "pubwfPublicationDate": {
                    "type": "string",
                    "description": "publication workflow publication ISO date string indicating when the document was first published"
                },
                "items": {
                    "type": "object",
                    "description": "object describing the values stored in the document, this structure will be different for every document type."
                }
            },
            "required": []
        },
        "ApiResponse": {
            "type": "object",
            "title": "ApiResponse",
            "properties": {
                "success": {
                    "type": "boolean",
                    "description": "`true` indicates the operation was successful."
                },
                "message": {
                    "type": "string",
                    "description": "the message describing the state of the response."
                }
            },
            "required": []
        },
        "DocumentWithUuidResponse": {
            "type": "object",
            "title": "DocumentWithUuidResponse",
            "properties": {
                "document": {
                    "$ref": "#/definitions/BloomreachDocument",
                    "description": "the document that is present at the UUID"
                }
            },
            "required": [],
            "allOf": [
                {
                    "type": "ApiResponse",
                    "$ref": "#/definitions/ApiResponse"
                }
            ]
        },
        "UuidToPathResponse": {
            "type": "object",
            "title": "UuidToPathResponse",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "the UUID that was originally requested"
                },
                "type": {
                    "type": "string",
                    "description": "the CND type of the document this UUID belongs to"
                },
                "path": {
                    "type": "string",
                    "description": "the path at which the document with this UUID lives."
                }
            },
            "required": [],
            "allOf": [
                {
                    "type": "ApiResponse",
                    "$ref": "#/definitions/ApiResponse"
                }
            ]
        },
        "PathToUuidResponse": {
            "type": "object",
            "title": "PathToUuidResponse",
            "properties": {},
            "required": [],
            "allOf": [
                {
                    "type": "UuidToPathResponse",
                    "$ref": "#/definitions/UuidToPathResponse"
                }
            ]
        },
        "BloomreachFolder": {
            "type": "object",
            "title": "BloomreachFolder",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "the UUID of the folder in the repository"
                },
                "path": {
                    "type": "string",
                    "description": "the absolute path of the folder in the repository"
                },
                "name": {
                    "type": "string",
                    "description": "the node name of the folder in the repository"
                },
                "label": {
                    "type": "string",
                    "description": "the display name of the folder in the repository"
                }
            },
            "required": []
        },
        "ListDocumentsResponse": {
            "type": "object",
            "title": "ListDocumentsResponse",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "the uuid of the node at the path requested"
                },
                "path": {
                    "type": "string",
                    "description": "the path as requested in the request"
                },
                "name": {
                    "type": "string",
                    "description": "the name of the node"
                },
                "label": {
                    "type": "string",
                    "description": "the display name of the node"
                },
                "folders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BloomreachFolder",
                        "description": "a list of folders that are available at this path"
                    }
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BloomreachDocument",
                        "description": "a list of child documents available at the requested path"
                    }
                }
            },
            "required": [],
            "allOf": [
                {
                    "type": "ApiResponse",
                    "$ref": "#/definitions/ApiResponse"
                }
            ]
        },
        "BloomreachLink": {
            "type": "object",
            "title": "BloomreachLink",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "'local' to signify the document is in the repository"
                },
                "id": {
                    "type": "string",
                    "description": "the uuid of the node"
                },
                "url": {
                    "type": "string",
                    "description": "a URL that can retrieve this specific document"
                }
            },
            "required": []
        },
        "BloomreachGetDocumentItem": {
            "type": "object",
            "title": "BloomreachGetDocumentItem",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "the name of the node"
                },
                "id": {
                    "type": "string",
                    "description": "the uuid of the node"
                },
                "link": {
                    "$ref": "#/definitions/BloomreachLink",
                    "description": "the link to the document"
                },
                "type": {
                    "type": "string",
                    "description": "the CND type of this node"
                }
            },
            "required": []
        },
        "GetDocumentsResponse": {
            "type": "object",
            "title": "GetDocumentsResponse",
            "properties": {
                "offset": {
                    "type": "number",
                    "description": "the offset for the result set"
                },
                "max": {
                    "type": "number",
                    "description": "the limit to the number of records to be returned"
                },
                "count": {
                    "type": "number",
                    "description": "the number of items returned"
                },
                "total": {
                    "type": "number",
                    "description": "total number of results (includes results outside the current offset/max viewport)"
                },
                "more": {
                    "type": "boolean",
                    "description": "if true there are more results to be retrieved in a next page."
                },
                "items": {
                    "$ref": "#/definitions/BloomreachGetDocumentItem",
                    "description": "a list of result items."
                }
            },
            "required": []
        }
    }
}
