<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

  <context:annotation-config/>
  <context:component-scan base-package="nz.xinsolutions" />

  <import resource="classpath:/org/hippoecm/hst/site/optional/jaxrs/SpringComponentManager-rest-jackson.xml"/>
  <import resource="classpath:/org/hippoecm/hst/site/optional/jaxrs/SpringComponentManager-rest-plain-pipeline.xml"/>
  <import resource="classpath:/org/hippoecm/hst/site/optional/jaxrs/SpringComponentManager-rest-content-pipeline.xml"/>


  <bean id="htmlCleaner" class="org.hippoecm.hst.content.rewriter.HtmlCleanerFactoryBean"/>

  <bean id="restApiHtmlParser" class="org.hippoecm.hst.restapi.content.html.RestApiHtmlParser">
    <property name="htmlCleaner" ref="htmlCleaner"/>
  </bean>

  <bean id="fallbackNodeVisitors" class="org.springframework.beans.factory.config.ListFactoryBean">
    <property name="sourceList">
      <list>
        <bean id="hippoHandleVisitor" class="org.hippoecm.hst.restapi.content.visitors.HippoHandleVisitor"/>
        <bean id="hippoFolderVisitor" class="org.hippoecm.hst.restapi.content.visitors.HippoFolderVisitor"/>
        <bean id="hippoDirectoryVisitor" class="org.hippoecm.hst.restapi.content.visitors.HippoDirectoryVisitor"/>
        <bean id="hippoPublicationWorkflowDocumentVisitor" class="org.hippoecm.hst.restapi.content.visitors.HippoPublicationWorkflowDocumentVisitor"/>
        <bean id="hippoPublishableDocumentVisitor" class="org.hippoecm.hst.restapi.content.visitors.HippoPublishableDocumentVisitor"/>
        <bean id="hippoDocumentVisitor" class="org.hippoecm.hst.restapi.content.visitors.HippoDocumentVisitor"/>
        <bean id="hippoStdHtmlVisitor" class="org.hippoecm.hst.restapi.content.visitors.HippoStdHtmlVisitor">
          <property name="restApiHtmlParser" ref="restApiHtmlParser"/>
        </bean>
        <bean id="hippoFacetSelectVisitor" class="org.hippoecm.hst.restapi.content.visitors.HippoFacetSelectVisitor"/>
        <bean id="hippoMirrorVisitor" class="org.hippoecm.hst.restapi.content.visitors.HippoMirrorVisitor"/>
        <bean id="hippoGalleryImageVisitor" class="org.hippoecm.hst.restapi.content.visitors.HippoGalleryImageVisitor"/>
        <bean id="hippoResourceVisitor" class="org.hippoecm.hst.restapi.content.visitors.HippoResourceVisitor"/>
        <bean id="defaultNodeVisitor" class="org.hippoecm.hst.restapi.content.visitors.DefaultNodeVisitor"/>
      </list>
    </property>
  </bean>

  <bean id="classpathResourceScanner" class="org.hippoecm.hst.component.support.spring.util.MetadataReaderClasspathResourceScanner"></bean>

  <bean id="annotationBasedNodeVisitors" class="org.hippoecm.hst.restapi.scanning.AnnotationBasedNodeVisitorsFactoryBean">
    <property name="classpathResourceScanner" ref="classpathResourceScanner" />
  </bean>

  <bean id="restApiLinkCreator" class="org.hippoecm.hst.restapi.content.linking.RestApiLinkCreator"/>

  <bean id="resourceContextFactory" class="org.hippoecm.hst.restapi.ResourceContextFactory">
    <property name="restApiLinkCreator" ref="restApiLinkCreator"/>
    <property name="annotationBasedNodeVisitors" ref="annotationBasedNodeVisitors"/>
    <property name="fallbackNodeVisitors" ref="fallbackNodeVisitors"/>
  </bean>


  <bean id="customRestPlainResourceProviders" class="org.springframework.beans.factory.config.ListFactoryBean">
    <property name="sourceList">
      <list>
        <bean class="org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider">
          <constructor-arg>
            <bean class="nz.xinsolutions.rest.ContentQueryResource">
              <property name="resourceContextFactory" ref="resourceContextFactory"></property>
            </bean>
          </constructor-arg>
        </bean>
        <bean class="org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider">
          <constructor-arg>
            <bean class="nz.xinsolutions.rest.PackageManagerResource"/>
          </constructor-arg>
        </bean>
      </list>
    </property>
  </bean>

  <!--
    JAXB CONTEXT MAPPINGS
  -->
  <bean id="jaxrsHippoContextProvider" class="org.onehippo.cms7.essentials.components.rest.JaxbContextProvider">
    <property name="beansPackage" value="nz.xinsolutions.beans"/>
    <!--
      you can add extra classes if needed as followed:
    -->
    <!--
      <property name="classes">
        <list>
          <value type="java.lang.Class">org.example.beans.MyBean</value>
        </list>
      </property>
    -->
  </bean>

  <bean id="jaxrsRestExceptionMapper" class="org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper">
    <property name="printStackTrace" value="false" />
  </bean>

  <bean id="essentialsRestAllEntityProviders" class="org.springframework.beans.factory.config.ListFactoryBean">
    <property name="sourceList">
      <list>
        <ref bean="jaxrsRestJsonProvider"/>
        <ref bean="jaxrsHippoContextProvider"/>
        <ref bean="jaxrsRestExceptionMapper"/>
      </list>
    </property>
  </bean>

  <bean id="jaxrsRestPlainServiceValve" class="org.hippoecm.hst.core.container.JaxrsRestServiceValve"
        init-method="initialize" destroy-method="destroy">
    <constructor-arg>
      <bean class="org.hippoecm.hst.jaxrs.cxf.CXFJaxrsService">
        <constructor-arg value="jaxrsPlainService"/>
        <property name="servletPath" value=""/>
        <property name="jaxrsServerFactoryBean">
          <bean class="org.apache.cxf.jaxrs.JAXRSServerFactoryBean">
            <property name="address" value="/"/>
            <property name="providers" ref="essentialsRestAllEntityProviders"/>
            <property name="resourceProviders" ref="jaxrsRestPlainResourceProviders"/>
            <property name="invoker" ref="jaxrsRestPlainServiceInvoker"/>
          </bean>
        </property>
        <property name="inInterceptors">
          <list>
            <ref bean="jaxrsRestPlainServiceQueryStringReplacingInterceptor"/>
          </list>
        </property>
      </bean>
    </constructor-arg>
    <property name="valveName" value="jaxrsRestPlainServiceValve"/>
  </bean>

</beans>
